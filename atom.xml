<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="/Blog/atom.xml" rel="self"/>
  
  <link href="http://Tmamasay.githup.io/"/>
  <updated>2017-10-11T12:52:52.040Z</updated>
  <id>http://Tmamasay.githup.io/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Object</title>
    <link href="http://Tmamasay.githup.io/2017/10/11/Object/"/>
    <id>http://Tmamasay.githup.io/2017/10/11/Object/</id>
    <published>2017-10-11T12:25:59.000Z</published>
    <updated>2017-10-11T12:52:52.040Z</updated>
    
    <content type="html"><![CDATA[<h1 id="面向对象-万物皆对象"><a href="#面向对象-万物皆对象" class="headerlink" title="面向对象=====万物皆对象"></a>面向对象=====万物皆对象</h1><h3 id="对象就是对工具进行分类的管理"><a href="#对象就是对工具进行分类的管理" class="headerlink" title="对象就是对工具进行分类的管理"></a>对象就是对工具进行分类的管理</h3><hr><h2 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h2><blockquote><p>定义一个变量，在浏览器的解析中其实分两步，先声明变量，就是把声明的变量提到自己作用域的最前面<br>然后才给变量赋值。<br>    ` var a = 10;</p></blockquote><pre><code>(function test() {    console.log(a);    var a = 1;    console.log(a);})();console.log(a);</code></pre><p>//undefind 1 10 `</p><h3 id="变量的搜索机制"><a href="#变量的搜索机制" class="headerlink" title="变量的搜索机制"></a>变量的搜索机制</h3><blockquote><p>在一个独立的作用域中，变量的搜索机制是先搜索局部变量，在<br>搜寻全局变量，还有变量的提升，var a=1；这种在浏览器解析时，会先把变量声明<br>提到前面，在进行赋值，就是两步。</p></blockquote><h2 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h2><blockquote><p>其实函数就是一个工具<br>封装性：我们只需要了解如何使用工具去实现某个方法，而不需要了解该工具是怎么生成的，这就是函数<br>的封装性</p><h2 id="对象"><a href="#对象" class="headerlink" title="对象"></a>对象</h2><p>工具=函数=方法<br>属性</p><h3 id="面向对象"><a href="#面向对象" class="headerlink" title="面向对象"></a>面向对象</h3><p>就是借物的思想，学会的使用和管理工具。</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;面向对象-万物皆对象&quot;&gt;&lt;a href=&quot;#面向对象-万物皆对象&quot; class=&quot;headerlink&quot; title=&quot;面向对象=====万物皆对象&quot;&gt;&lt;/a&gt;面向对象=====万物皆对象&lt;/h1&gt;&lt;h3 id=&quot;对象就是对工具进行分类的管理&quot;&gt;&lt;a href=&quot;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Html5</title>
    <link href="http://Tmamasay.githup.io/2017/10/10/Html5/"/>
    <id>http://Tmamasay.githup.io/2017/10/10/Html5/</id>
    <published>2017-10-10T08:17:50.000Z</published>
    <updated>2017-10-10T08:42:02.668Z</updated>
    
    <content type="html"><![CDATA[<h1 id="主要变化"><a href="#主要变化" class="headerlink" title="主要变化"></a>主要变化</h1><blockquote><p>增加了一些语义化的标签，其实就是和普通的div一样，只是让一个网页的结构更加的清晰。<br>增加了音乐，视频等元素，让我们构建一个网页对别人的依赖减少了，以前想要在网页中添加视频，音乐需要flash的支持。<br>在javascript中加入了 querySelector   querySelectorAll 让我们能直接用类名，ID名获取元素节点。<br>data-XXX属性可以用来存放与该元素节点相关的数据 用elment.dataset.XXX来获取。<br>classlist 可以给元素节点添加class类名 elment.classlist.add(‘类名’);</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;主要变化&quot;&gt;&lt;a href=&quot;#主要变化&quot; class=&quot;headerlink&quot; title=&quot;主要变化&quot;&gt;&lt;/a&gt;主要变化&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;增加了一些语义化的标签，其实就是和普通的div一样，只是让一个网页的结构更加的清晰。&lt;br&gt;增加了
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>2017/10/10</title>
    <link href="http://Tmamasay.githup.io/2017/10/10/2017-10-10/"/>
    <id>http://Tmamasay.githup.io/2017/10/10/2017-10-10/</id>
    <published>2017-10-10T03:42:19.000Z</published>
    <updated>2017-10-10T03:43:27.714Z</updated>
    
    <content type="html"><![CDATA[<h1 id="2015年12月03日"><a href="#2015年12月03日" class="headerlink" title="2015年12月03日"></a>2015年12月03日</h1><h1 id="Markdown"><a href="#Markdown" class="headerlink" title="Markdown"></a>Markdown</h1><blockquote><p>用普通文本描述富文本的语法<br>扩展名md,markdown</p></blockquote><h1 id="HTML5之HTML篇回顾"><a href="#HTML5之HTML篇回顾" class="headerlink" title="HTML5之HTML篇回顾"></a>HTML5之HTML篇回顾</h1><ol><li>新标签<ol><li>语义化标签</li></ol></li><li>新属性<ol><li>链接关系描述</li><li>ARIA 无障碍富互联网应用程序属性</li><li>自定义属性 data-<ol><li>可以给HTML里的所有DOM对象都可以添加一些DATA-xxx的属性</li><li>用来记录与当前DOM强相关的数据</li></ol></li></ol></li><li>智能表单<ol><li>新的表单类型<ol><li>功能型的表单类型</li></ol></li><li>虚拟键盘适配<ol><li>通过type方式指定弹出键盘</li></ol></li></ol></li><li>网页多媒体<ol><li>之前强依赖flash </li><li>音频</li><li>多媒体的dom对象有一些新的方法可以去做播放暂停</li><li>视频</li><li>了解字幕</li></ol></li><li>SVG 文件基本使用<ol><li>iframe<ol><li>iframe的作用就是在网页中挖个坑，在这个坑里再展示一个页面</li><li>svg本身也是文档 所以可以使用iframe的方式载入</li></ol></li><li>ajax 直接可以修改样式 </li></ol></li></ol><h1 id="JavaScript"><a href="#JavaScript" class="headerlink" title="JavaScript"></a>JavaScript</h1><h2 id="2-1-基础API提升"><a href="#2-1-基础API提升" class="headerlink" title="2.1. 基础API提升"></a>2.1. 基础API提升</h2><h3 id="2-1-1-新选择器"><a href="#2-1-1-新选择器" class="headerlink" title="2.1.1 新选择器"></a>2.1.1 新选择器</h3><p>JS多了一个原始支持，类似jqueryDOM选择器</p><p>document.getElementById() 需要给DOM元素设置ID<br>document.querySelector(selector) 可以通过CSS选择器的语法找到DOM元素</p><p>document.getElementsByTagName()<br>document.querySelectorAll(‘.item’)</p><p>$(‘.item’).on</p><ol><li>document.querySelector(selector); </li><li>返回第一个满足选择器条件的元素 一个dom对象</li><li>document.querySelectorAll(‘.item’);</li><li>返回所有满足该条件的元素 一个元素类型是dom类型的数组</li><li>$(‘.item’)</li><li>返回一个jQuery对象（dom元素的数组）</li><li>本质上jquery方式和qs方式都是获取DOM数组， 只不过jquery会多一些其他成员</li><li>DOM数组的每一个成员注册事件不能像jquery一样直接注册， 必须分别给每个元素注册</li><li>h5就是将我们经常需要的操作又包装一层</li></ol><h3 id="2-1-2-元素-classList"><a href="#2-1-2-元素-classList" class="headerlink" title="2.1.2 元素.classList"></a>2.1.2 元素.classList</h3><ol><li>新H5中DOM对象多了一个classList属性，是一个数组</li><li>add 添加一个新的类名</li><li>remove 删除一个的类名</li><li>contains 判断是否包含一个指定的类名 </li><li>toggle 切换一个class element.toggle(‘class-name’,[add_or_remove])</li><li>toggle函数的第二个参数true为添加 false删除</li></ol><h3 id="2-1-3-访问历史-API"><a href="#2-1-3-访问历史-API" class="headerlink" title="2.1.3 访问历史 API"></a>2.1.3 访问历史 API</h3><p>界面上的所有JS操作不会被浏览器记住，就无法回到之前的状态<br>在HTML5中可以通过window.history操作访问历史状态，让一个页面可以有多个历史状态</p><ol><li>window.history.forward(); // 前进</li><li>window.history.back(); // 后退</li><li>window.history.go(); // 刷新</li><li>通过JS可以加入一个访问状态</li><li>history.pushState(放入历史中的状态数据, 设置title(现在浏览器不支持)， 改变历史状态)</li></ol><h3 id="2-1-4-全屏-API"><a href="#2-1-4-全屏-API" class="headerlink" title="2.1.4 全屏 API"></a>2.1.4 全屏 API</h3><blockquote><p>JavaScript中可以通过调用requestFullScreen()方式实现指定元素的全屏显示<br>var element = document.querySelector(‘…’);<br>element.requestFullScreen();</p></blockquote><h2 id="2-2-网页存储"><a href="#2-2-网页存储" class="headerlink" title="2.2 网页存储"></a>2.2 网页存储</h2><h3 id="2-2-1-Web-Storage"><a href="#2-2-1-Web-Storage" class="headerlink" title="2.2.1 Web Storage"></a>2.2.1 Web Storage</h3><ol><li>getItem方式获取一个不存在的键 返回空字符串</li><li>[]返回 undefined</li></ol><h3 id="2-2-2-Web-SQL"><a href="#2-2-2-Web-SQL" class="headerlink" title="2.2.2 Web SQL"></a>2.2.2 Web SQL</h3><h3 id="2-2-3-IndexedDB"><a href="#2-2-3-IndexedDB" class="headerlink" title="2.2.3 IndexedDB"></a>2.2.3 IndexedDB</h3><h2 id="2-3-文件系统"><a href="#2-3-文件系统" class="headerlink" title="2.3 文件系统"></a>2.3 文件系统</h2><h3 id="2-3-1-File-API"><a href="#2-3-1-File-API" class="headerlink" title="2.3.1 File API"></a>2.3.1 File API</h3><h3 id="2-3-2-FileReader"><a href="#2-3-2-FileReader" class="headerlink" title="2.3.2 FileReader"></a>2.3.2 FileReader</h3><h2 id="2-4-拖放操作"><a href="#2-4-拖放操作" class="headerlink" title="2.4 拖放操作"></a>2.4 拖放操作</h2><h3 id="2-4-1-网页内拖放"><a href="#2-4-1-网页内拖放" class="headerlink" title="2.4.1 网页内拖放"></a>2.4.1 网页内拖放</h3><h3 id="2-4-2-文件拖入"><a href="#2-4-2-文件拖入" class="headerlink" title="2.4.2 文件拖入"></a>2.4.2 文件拖入</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;2015年12月03日&quot;&gt;&lt;a href=&quot;#2015年12月03日&quot; class=&quot;headerlink&quot; title=&quot;2015年12月03日&quot;&gt;&lt;/a&gt;2015年12月03日&lt;/h1&gt;&lt;h1 id=&quot;Markdown&quot;&gt;&lt;a href=&quot;#Markdown&quot;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://Tmamasay.githup.io/2017/10/10/hello-world/"/>
    <id>http://Tmamasay.githup.io/2017/10/10/hello-world/</id>
    <published>2017-10-10T03:26:38.525Z</published>
    <updated>2017-10-10T03:26:38.530Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
